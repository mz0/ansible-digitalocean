- hosts: provisioner
  gather_facts: no
  vars_files:
    vars/ar1.yml
  tasks:
    - name: Ensure server is like new - re-image from current template - ETA 3-{{wait_minutes}} minutes
      it_aruba_smart_vm:
        state: pristine
        user: "{{ arubau }}"
        password: "{{ arubap }}"
        dc: 1
        name: La
        wait: true
        wait_time: "{{wait_minutes * 60}}"
        timeout: 12
      register:  vm

    - name: Print result
      debug: var=vm

    - name: Add VM to in-memory (dynamic) inventory
      add_host:
        name: lab
        groups: dohosts
        ansible_host: "{{vm.srv.ip4}}"
        ansible_user: root
        ansible_ssh_pass: "{{ vm.srv.password0 }}"
        ip4gw: "{{ vm.srv.ip4gw }}"
        ip4am: "{{ vm.srv.ip4am }}"
        ip6gw: "{{ vm.srv.ip6gw }}"
        ip6am: "{{ vm.srv.ip6am }}"
        ip6: "{{ vm.srv.ip6 }}"
        ansible_ssh_extra_args: '-o StrictHostKeyChecking=accept-new' # need OpenSSH >= 7.6
      changed_when: false

    - name: Delete existing SSH host keys
      shell: "ssh-keygen -R {{vm.srv.ip4}}; ssh-keygen -R '[{{vm.srv.ip4}}]:{{ssh_set_port}}'"
      changed_when: false

- hosts: lab #TODO ensure StrictHostKeyChecking=yes
  gather_facts: no
  vars:
    root_ssh_pk:  "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    ssh_pub_key:  "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  vars_files:
    - vars/main.yml
    - vars/ar1.yml # TODO split in two, strip Aruba details.
    - vars/trim0-aruba.yml
    - vars/emp.yml

  tasks:
    - include: tasks/ssh-rootkey.yml
    - include: tasks/nic-reset.yml
    - include: tasks/sysvinit.yml
    - include: tasks/ssh-port.yml
    - include: tasks/reclaim-swrsvd.yml

    # include: tasks/swap.yml
    - include: tasks/software.yml
    - include: tasks/security.yml
    - include: tasks/users.yml
    - include: tasks/trim.yml
    - debug: var=uninstall.stdout_lines
    - include: tasks/add-srv.yml

    - name: Check if empty DBroot password works
      shell: mysqladmin -u root --password='' status
      changed_when: false
      failed_when: false
      register: empty_DBroot_password
    - include: tasks/dbroot-password.yml
      when: empty_DBroot_password.rc == 0

  handlers:
    - include: handlers/site.yml
