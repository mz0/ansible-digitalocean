- hosts: localhost
  gather_facts: no
  vars:
    cloudflare_key: "{{ lookup('file', '~/.ssh/cloudflare/d35z') }}"
    cloudflare_email: "d35z@mail.ru"
    acme_account_key: '~/.ssh/le-33935398.key'
    acme_account_email: "mz0@outlook.com"
    server_name: y
    domain: "d35.ru"
    cert_name: "d35.{{ server_name }}"
    cert_days: 90
    server_hostname: "{{ server_name }}.{{ domain }}"
    server_privkey_new: "~/.ssh/https/{{ cert_name }}.private"
    cert_names: ["{{ server_hostname}}", "www.{{ domain }}"]
    cert_csr: "host_vars/{{ cert_name }}.csr"
    cert_tmp: "host_vars/{{ cert_name }}.crt"
    cert_tgt: "/etc/ssl/certs/d35.y.crt"
    cert_key: "/etc/ssl/private/{{ cert_name }}.key"
    #cert_tgt: "/home/mz0/dehydrated/certs/y.d35.ru/cert.pem"
    #cert_key: "/etc/ssl/private/privkey.pem"
    # cert_tgt: "/etc/nginx/sec.d35.pem"  # litvaxx
    # cert_key: "/Users/mz0/.ssh/d35x/privkey.pem"
  tasks:
    - name: Webserver Private key (always re-new)
      openssl_privatekey:
        path: "{{ server_privkey_new }}"
        force: yes
        mode: 0600

    - name: Prepare CSR
      openssl_csr:
        path: "{{ cert_csr }}"
        privatekey_path: "{{ server_privkey_new }}"
        common_name: "{{ server_hostname }}"
        subject_alt_name:
          - "DNS:{{ server_hostname }}"
          - "DNS:www.{{ domain }}"

    - name: Get challenge
      acme_certificate:
        acme_version: 2
        acme_directory: https://acme-v02.api.letsencrypt.org/directory
        account_key_src: "{{ acme_account_key }}"
        csr: "{{ cert_csr }}"
        challenge: dns-01
        dest: "vars/{{ server_hostname }}.crt"
      register: acme_data

    - debug:
        msg: "Record:{{ item.value['dns-01']['record'] }} / Value:{{ item.value['dns-01'].resource_value }}"
      loop: "{{ lookup('dict', acme_data.challenge_data) }}"
      when: "acme_data is changed and 'dns-01' in item.value"

    - cloudflare_dns:
        zone: "{{ domain }}"
        account_api_token: "{{ cloudflare_key }}"
        account_email: "{{ cloudflare_email }}"
        type: TXT
        ttl: 120
        state: present
        record: "{{ item.value['dns-01']['record'] }}"
        value:  "{{ item.value['dns-01']['resource_value'] }}"
      loop: "{{ lookup('dict', acme_data.challenge_data) }}"
      when: "acme_data is changed and 'dns-01' in item.value"

    - name: Validate challenge response and get the certificate
      acme_certificate:
        acme_version: 2
        acme_directory: https://acme-v02.api.letsencrypt.org/directory
        account_key_src: "{{ acme_account_key }}"
        csr: "{{ cert_csr }}"
        remaining_days: "{{ cert_days }}"
        challenge: dns-01
        dest: "{{ cert_tmp }}"
        data: "{{ acme_data }}"
      register: le_cert

    - name: Clean-up challenge response
      cloudflare_dns:
        zone: "{{ domain }}"
        account_api_token: "{{ cloudflare_key }}"
        account_email: "{{ cloudflare_email }}"
        state: absent
        record: "{{ item.value['dns-01'].record }}"
      with_dict: "{{ acme_data.challenge_data }}"
      when: acme_data is changed and le_cert is success
